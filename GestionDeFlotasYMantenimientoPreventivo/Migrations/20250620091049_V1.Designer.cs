// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionMaestros.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620091049_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sistema.Modelos.Camion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<double>("KilometrajeActual")
                        .HasColumnType("float");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Camiones");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Conductor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CamionCodigo")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSangre")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CamionCodigo");

                    b.ToTable("Conductores");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Licencia", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("ConductorCodigo")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoLicencia")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("ConductorCodigo");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.MantenimientoProgramado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CamionCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRealizada")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kilometraje")
                        .HasColumnType("float");

                    b.Property<int>("TallerCodigo")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CamionCodigo");

                    b.HasIndex("TallerCodigo");

                    b.ToTable("MantenimientosProgramados");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Taller", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CapacidadMaximaDeReparacionesSimultaneas")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Tallers");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Usuario", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Conductor", b =>
                {
                    b.HasOne("Sistema.Modelos.Camion", "Camion")
                        .WithMany("Conductores")
                        .HasForeignKey("CamionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camion");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Licencia", b =>
                {
                    b.HasOne("Sistema.Modelos.Modelos.Conductor", "Conductor")
                        .WithMany("Licencias")
                        .HasForeignKey("ConductorCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conductor");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.MantenimientoProgramado", b =>
                {
                    b.HasOne("Sistema.Modelos.Camion", "Camion")
                        .WithMany("MantenimientosProgramados")
                        .HasForeignKey("CamionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Modelos.Modelos.Taller", "Taller")
                        .WithMany("MantenimientosProgramados")
                        .HasForeignKey("TallerCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camion");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("Sistema.Modelos.Camion", b =>
                {
                    b.Navigation("Conductores");

                    b.Navigation("MantenimientosProgramados");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Conductor", b =>
                {
                    b.Navigation("Licencias");
                });

            modelBuilder.Entity("Sistema.Modelos.Modelos.Taller", b =>
                {
                    b.Navigation("MantenimientosProgramados");
                });
#pragma warning restore 612, 618
        }
    }
}
